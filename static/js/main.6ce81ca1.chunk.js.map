{"version":3,"sources":["components/GuildTable.jsx","components/GuildRequest.jsx","App.js","index.js"],"names":["GuildTable","_ref","title","guildCharacters","token","rank","update","_React$useState","React","name","spec","class","prof","ilvl","_React$useState2","Object","slicedToArray","characters","setCharacters","_React$useState3","_React$useState4","charactersAdvanced","setCharactersAdvanced","_React$useState5","_React$useState6","orderBy","setOrderBy","_React$useState7","_React$useState8","sortDirection","setSortDirection","useEffect","filter","element","includes","character","level","forEach","player","playerName","toLowerCase","fetch","concat","then","res","json","prev","toConsumableArray","active_spec","character_class","equipped_item_level","catch","err","console","log","charactersCopy","primaries","find","map","profession","join","array","stringCompare","string1","string2","react","className","reduce","total","currentValue","length","toFixed","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","onClick","align","TableBody","sort","a","b","number1","number2","numberCompare","letsCompare","index","key","sx","&:last-child td, &:last-child th","border","scope","href","rel","target","player-class","GuildRequest","useState","setToken","setGuildCharacters","guildInfo","setGuildInfo","guildName","_React$useState9","_React$useState10","realmName","_React$useState11","_React$useState12","setUpdate","_React$useState13","_React$useState14","isButtonDisabled","setIsButtonDisabled","_React$useState15","_React$useState16","countdown","setCountdown","setTimeout","body","headers","Authorization","Content-Type","method","response","access_token","members","react_default","createElement","Fragment","guild","realm","IconButton","disabled","color","Refresh_default","darkTheme","createTheme","palette","mode","App","ThemeProvider","theme","CssBaseline","Container","fixed","maxWidth","GuildRequest_GuildRequest","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.6ce81ca1.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport default function GuildTable({ title, guildCharacters, token, update, rank }) {\n\n\n  // стейт который содержит в себе данные, которые были получены от API профилей персонажей\n  const [characters, setCharacters] = React.useState([{\n    name: '',\n    spec: '',\n    class: '',\n    prof: '',\n    ilvl: '',\n  }]);\n  const [charactersAdvanced, setCharactersAdvanced] = React.useState([{\n    name: '',\n    spec: '',\n    class: '',\n    prof: '',\n    ilvl: '',\n  }]);\n\n\n  const [orderBy, setOrderBy] = React.useState('ilvl');\n  const [sortDirection, setSortDirection] = React.useState(false);\n\n  useEffect(() => {\n    if (token) {\n      setCharacters([]);\n      guildCharacters\n        .filter(element => rank.includes(element.rank) && element.character.level === 70)\n        .forEach((player) => {\n          let playerName = player.character.name.toLowerCase();\n          fetch(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}?namespace=profile-eu&locale=en_US&access_token=${token}`)\n            .then(res => res.json())\n            .then((json) => {\n              setCharacters(prev => [...prev, {\n                name: json.name,\n                spec: json.active_spec.name,\n                class: json.character_class.name,\n                prof: 'No Professions',\n                ilvl: json.equipped_item_level,\n              }]);\n            })\n            .catch(err => console.log(err));\n        });\n    }\n  }, [guildCharacters])\n\n  useEffect(() => {\n    setCharactersAdvanced([]);\n    characters.forEach((player) => {\n      if (player.name) {\n        let playerName = player.name.toLowerCase();\n        let charactersCopy = [...characters]\n        fetch(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}/professions?namespace=profile-eu&locale=en_US&access_token=${token}`)\n          .then(res => res.json())\n          .then(json => {\n            if (json.primaries) {\n              charactersCopy.find(element => {\n                if (element.name === json.character.name) {\n                  element.prof = json.primaries.map(element => {\n                    return element.profession.name;\n                  }).join(', ')\n                }\n              })\n              setCharactersAdvanced(charactersCopy);\n            }\n          })\n          .catch(err => console.log(err, `error with prof fetch, player's name is ${player.name}`));\n      }\n    })\n  }, [characters])\n\n  const stringCompare = (string1, string2, sortDirection) => {\n    if (sortDirection) {\n      if (string1 < string2) { return -1; }\n      if (string1 > string2) { return 1; }\n      return 0;\n    } else {\n      if (string1 > string2) { return -1; }\n      if (string1 < string2) { return 1; }\n      return 0;\n    }\n  }\n\n  const numberCompare = (number1, number2, sortDirection) => {\n    if (sortDirection) {\n      return number1 - number2\n    } else {\n      return number2 - number1\n    }\n  }\n\n\n  const letsCompare = (a, b, orderBy, sortDirection) => {\n    switch (orderBy) {\n      case 'ilvl': {\n        return numberCompare(a.ilvl, b.ilvl, sortDirection)\n      }\n      case 'name': {\n        return stringCompare(a.name, b.name, sortDirection)\n      }\n      case 'class': {\n        return stringCompare(a.class, b.class, sortDirection)\n      }\n      case 'spec': {\n        return stringCompare(a.spec, b.spec, sortDirection)\n      }\n      case 'prof': {\n        return stringCompare(a.prof, b.prof, sortDirection)\n      }\n      default:\n        break;\n    }\n  }\n\n  const compareFunction = (a, b) => {\n    return letsCompare(a, b, orderBy, sortDirection);\n  }\n\n  const getAverageItemLevel = (array) => {\n    const initialValue = 0;\n    const sumWithInitial = array.reduce(\n      (total, currentValue) => total + currentValue.ilvl,\n      initialValue\n    )\n    let avIlvl = sumWithInitial / array.length\n    return avIlvl.toFixed(2);\n  }\n\n  return (\n    <div className=\"app__table\">\n      <h2>{title} <span className=\"average-item-level\">{getAverageItemLevel(characters)}</span></h2>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('name')\n                  setSortDirection(!sortDirection)\n                }}>\n                Nickname\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('spec')\n                  setSortDirection(!sortDirection)\n                }}>\n                Spec\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('class')\n                  setSortDirection(!sortDirection)\n                }}>\n                Class\n              </TableCell>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('prof')\n                  setSortDirection(!sortDirection)\n                }} align=\"right\">\n                Prof.\n              </TableCell>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('ilvl')\n                  setSortDirection(!sortDirection)\n                }} align=\"right\">\n                ilvl\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {charactersAdvanced\n              .sort(compareFunction)\n              .map((player, index) => (\n                <TableRow\n                  key={index}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    <a href={`https://worldofwarcraft.com/ru-ru/character/eu/gordunni/${player.name}`} rel=\"noopener noreferrer\" target=\"_blank\"><strong>{player.name}</strong></a>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {player.spec}\n                  </TableCell>\n                  <TableCell align=\"right\" player-class={`${player.class}`}>\n                    <span>{player.class}</span>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {player.prof}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span className={player.ilvl >= 379 ? 'red' : '' + player.ilvl >= 372 ? 'green' : ''}>{player.ilvl}</span>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}","import React from 'react'\nimport { useEffect } from 'react';\nimport GuildTable from './GuildTable';\nimport IconButton from '@mui/material/IconButton';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nexport const GuildRequest = () => {\n\n    const [token, setToken] = React.useState()\n    const [guildCharacters, setGuildCharacters] = React.useState([])\n    const [guildInfo, setGuildInfo] = React.useState();\n    const [guildName, setGuildName] = React.useState('чёрный-лотос')\n    const [realmName, setRealmName] = React.useState('gordunni');\n    const [update, setUpdate] = React.useState(false);\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\n    const [countdown, setCountdown] = React.useState(0);\n\n    React.useEffect(() => {\n        countdown > 0 && setTimeout(() => setCountdown(countdown - 1), 1000);\n    }, [countdown]);\n\n    React.useEffect(() => {\n        setIsButtonDisabled(true);\n        setTimeout(() => {\n            setIsButtonDisabled(false);\n        }, 30000)\n        setCountdown(30)\n    }, [])\n\n    useEffect(() => {\n        if (!token) {\n            fetch(\"https://oauth.battle.net/token\", {\n                body: \"grant_type=client_credentials\",\n                headers: {\n                    Authorization:\n                        \"Basic Y2QwOTE0YzdjYjQ1NDNhNzhiYmVjOWY4OGY1OTU0N2M6bXpUamhHVkc4UnlnUlpsQzY0S3FRS1hhQjFPUWJGcjE=\",\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                method: \"POST\"\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    setToken(response.access_token)\n                })\n                .catch((err) => console.log(err))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token && guildName) {\n            fetch(`https://eu.api.blizzard.com/data/wow/guild/${realmName}/${guildName}/roster?namespace=profile-eu&locale=en_US&access_token=${token}`)\n                .then((res) => res.json())\n                .then((res) => {\n                    setGuildCharacters(res.members)\n                    setGuildInfo(res)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [guildName, realmName, token, update])\n\n    return (\n        <>\n            <div className=\"app__header\">\n                {guildCharacters.length !== 0 && (\n                    <div className='app__header-title'>\n                        <h1>{guildInfo.guild.name}</h1>\n                        <small>{guildInfo.guild.realm.name}</small>\n                    </div>\n                )}\n                <div className=\"app__header-buttons\">\n                    {countdown !== 0 && (\n                        <span>{countdown}</span>\n                    )}\n                    <IconButton disabled={isButtonDisabled} onClick={() => {\n                        setUpdate(!update)\n                        setIsButtonDisabled(true)\n                        setTimeout(() => {\n                            setIsButtonDisabled(false);\n                        }, 60000)\n                        setCountdown(60)\n                    }} color=\"secondary\" aria-label=\"Update Data\">\n                        <RefreshIcon />\n                    </IconButton>\n                </div>\n            </div>\n            {guildCharacters.length !== 0 && (\n                <div className='app__tables'>\n                    <GuildTable guildCharacters={guildCharacters} token={token} update={update} rank={[5, 4, 3, 2, 1, 0]} title={'Main'} />\n                    <GuildTable guildCharacters={guildCharacters} token={token} update={update} rank={[6]} title={'Alt'} />\n                </div>\n            )}\n        </>\n\n    )\n}\n","import React from \"react\";\nimport { GuildRequest } from \"./components/GuildRequest\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <Container fixed maxWidth=\"xl\">\n          <GuildRequest/>\n        </Container>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '../src/pages/index.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}