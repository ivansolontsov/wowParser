{"version":3,"sources":["components/GuildTable.jsx","components/GuildRequest.jsx","App.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","GuildTable","_ref","title","guildCharacters","token","update","rank","loadingState","setLoadingState","_React$useState","React","_React$useState2","slicedToArray","characterProfiles","setCharacterProfiles","_React$useState3","_React$useState4","characterProfessions","setCharacterProfessions","_React$useState5","_React$useState6","characterAvatars","setCharacterAvatars","_React$useState7","_React$useState8","orderBy","setOrderBy","_React$useState9","_React$useState10","sortDirection","setSortDirection","_React$useState11","id","avatar","spec","class","prof","ilvl","_React$useState12","characters","setCharacters","useEffect","fetchApplicationData","map","player","profession","professionData","find","element","data","character","primaries","join","avatarDataForCurrenCharacter","assets","concat","toConsumableArray","active_spec","character_class","equipped_item_level","array","_ref2","asyncToGenerator","_callee","profiles","professions","avatars","_characterProfiles","charProfs","charAvatars","_context","filter","includes","level","playerName","toLowerCase","axios","get","all","console","log","t0","apply","arguments","stringCompare","string1","string2","react","className","Stack","spacing","direction","alignItems","Chip","color","label","reduce","total","currentValue","toFixed","size","TableContainer","component","Paper","Box","sx","width","LinearProgress","Table","aria-label","TableHead","TableRow","TableCell","onClick","align","TableBody","sort","a","b","number1","number2","numberCompare","letsCompare","index","&:last-child td, &:last-child th","border","scope","src","alt","href","rel","target","player-class","GuildRequest","useState","setToken","setGuildCharacters","guildInfo","setGuildInfo","guildName","realmName","_React$useState13","_React$useState14","setUpdate","_React$useState15","_React$useState16","isButtonDisabled","setIsButtonDisabled","_React$useState17","_React$useState18","countdown","setCountdown","setTimeout","fetch","body","headers","Authorization","Content-Type","response","json","access_token","res","members","react_default","createElement","Fragment","justifyContent","guild","realm","IconButton","disabled","Refresh_default","xs","sm","darkTheme","createTheme","palette","mode","App","ThemeProvider","theme","CssBaseline","Container","fixed","maxWidth","GuildRequest_GuildRequest","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.ae587a5c.chunk.js","sourcesContent":["import * as React from 'react';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\n\n\n\nexport default function GuildTable({ title, guildCharacters, token, update, rank, loadingState, setLoadingState }) {\n\n  // API INFO\n  const [characterProfiles, setCharacterProfiles] = React.useState([]);\n  const [characterProfessions, setCharacterProfessions] = React.useState([]);\n  const [characterAvatars, setCharacterAvatars] = React.useState([]);\n  // API INFO END\n  const [orderBy, setOrderBy] = React.useState('ilvl');\n  const [sortDirection, setSortDirection] = React.useState(false);\n\n  const [characters, setCharacters] = React.useState([{\n    id: '',\n    avatar: '',\n    name: '',\n    spec: '',\n    class: '',\n    prof: '',\n    ilvl: '',\n  }]);\n\n  useEffect(() => {\n    fetchApplicationData();\n  }, [update])\n\n\n  useEffect(() => {\n    setCharacters([])\n    characterProfiles.map(player => { // заполняем наших персонажей\n      // поля по умолчанию\n      let profession = 'No Professions'\n      let avatar = '';\n      // вытягиваем профессию из данных что хранятся в стейте, для текущего плеера, который на данный момент обрабатывается методом map()\n      let professionData = characterProfessions.find(element => {\n        if (element.data.character.id === player.data.id) {\n          return element;\n        }\n        return false;\n      })\n      if (professionData.data.primaries) {\n        professionData = professionData.data.primaries.map(element => element.profession.name).join(', ')\n        profession = professionData;\n      }\n      // профессии вытянуты, по умолчанию \"Нет Профессий\"\n\n      // вытягиваем аватар из данных что хранятся в стейте, для текущего плеера, который на данный момент обрабатывается методом map()\n      let avatarDataForCurrenCharacter = characterAvatars.find(element => {\n        if (element.data.character.id === player.data.id) {\n          return element.data.assets[0].value;\n        }\n        return false\n      })\n      avatarDataForCurrenCharacter = avatarDataForCurrenCharacter.data.assets[0].value\n      avatar = avatarDataForCurrenCharacter;\n\n      // аватарки вытянуты, по умолчанию пустое поле\n      return setCharacters(prev => [...prev, {\n        id: player.data.id,\n        avatar: avatar,\n        name: player.data.name,\n        spec: player.data.active_spec.name,\n        class: player.data.character_class.name,\n        prof: profession,\n        ilvl: player.data.equipped_item_level,\n      }]);\n    })\n  }, [characterProfiles, characterProfessions])\n\n\n  const fetchApplicationData = async () => {\n    setLoadingState(true);\n    try {\n      const profiles = guildCharacters\n        .filter(element => rank.includes(element.rank) && element.character.level === 70)\n        .map((player) => {\n          let playerName = player.character.name.toLowerCase();\n          return axios.get(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}?namespace=profile-eu&locale=en_US&access_token=${token}`)\n        })\n      const professions = guildCharacters\n        .filter(element => rank.includes(element.rank) && element.character.level === 70)\n        .map((player) => {\n          let playerName = player.character.name.toLowerCase();\n          return axios.get(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}/professions?namespace=profile-eu&locale=en_US&access_token=${token}`)\n        })\n      const avatars = guildCharacters\n        .filter(element => rank.includes(element.rank) && element.character.level === 70)\n        .map((player) => {\n          let playerName = player.character.name.toLowerCase();\n          return axios.get(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}/character-media?namespace=profile-eu&locale=en_US&access_token=${token}`)\n        })\n\n      const characterProfiles = await Promise.all(profiles);\n      const charProfs = await Promise.all(professions);\n      const charAvatars = await Promise.all(avatars);\n      setCharacterProfiles(characterProfiles);\n      setCharacterProfessions(charProfs);\n      setCharacterAvatars(charAvatars);\n      console.log(charAvatars);\n    } catch (error) {\n      console.log(error)\n    } finally {\n      setLoadingState(false);\n    }\n  };\n\n  const stringCompare = (string1, string2, sortDirection) => {\n    if (sortDirection) {\n      if (string1 < string2) { return -1; }\n      if (string1 > string2) { return 1; }\n      return 0;\n    } else {\n      if (string1 > string2) { return -1; }\n      if (string1 < string2) { return 1; }\n      return 0;\n    }\n  }\n\n  const numberCompare = (number1, number2, sortDirection) => {\n    if (sortDirection) {\n      return number1 - number2\n    } else {\n      return number2 - number1\n    }\n  }\n\n\n  const letsCompare = (a, b, orderBy, sortDirection) => {\n    switch (orderBy) {\n      case 'ilvl': {\n        return numberCompare(a.ilvl, b.ilvl, sortDirection)\n      }\n      case 'name': {\n        return stringCompare(a.name, b.name, sortDirection)\n      }\n      case 'class': {\n        return stringCompare(a.class, b.class, sortDirection)\n      }\n      case 'spec': {\n        return stringCompare(a.spec, b.spec, sortDirection)\n      }\n      case 'prof': {\n        return stringCompare(a.prof, b.prof, sortDirection)\n      }\n      default:\n        break;\n    }\n  }\n\n  const compareFunction = (a, b) => {\n    return letsCompare(a, b, orderBy, sortDirection);\n  }\n\n  const getAverageItemLevel = (array) => {\n    const initialValue = 0;\n    const sumWithInitial = array.reduce(\n      (total, currentValue) => total + currentValue.ilvl,\n      initialValue\n    )\n    let avIlvl = sumWithInitial / array.length\n    return avIlvl.toFixed(2);\n  }\n\n  return (\n    <div className=\"app__table\">\n      <Stack spacing={1} direction=\"row\" alignItems=\"center\">\n        <h2>{title}</h2>\n        <Chip color=\"secondary\" label={getAverageItemLevel(characters)} size=\"small\" />\n      </Stack>  \n      <TableContainer component={Paper}>\n        {loadingState && (\n          <Box sx={{ width: '100%' }}>\n            <LinearProgress />\n          </Box>\n        )}\n        <Table size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('name')\n                  setSortDirection(!sortDirection)\n                }}>\n                Nickname\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('spec')\n                  setSortDirection(!sortDirection)\n                }}>\n                Spec\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('class')\n                  setSortDirection(!sortDirection)\n                }}>\n                Class\n              </TableCell>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('prof')\n                  setSortDirection(!sortDirection)\n                }} align=\"right\">\n                Prof.\n              </TableCell>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('ilvl')\n                  setSortDirection(!sortDirection)\n                }} align=\"right\">\n                ilvl\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {characters\n              .sort(compareFunction)\n              .map((player, index) => (\n                <TableRow\n                  key={index}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    <img src={`${player.avatar}`} alt={`${player.name} avatar`} className=\"app__avatar\" />\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <a href={`https://worldofwarcraft.com/ru-ru/character/eu/gordunni/${player.name}`} rel=\"noopener noreferrer\" target=\"_blank\"><strong>{player.name}</strong></a>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {player.spec}\n                  </TableCell>\n                  <TableCell align=\"right\" player-class={`${player.class}`}>\n                    <span>{player.class}</span>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {player.prof}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span className={player.ilvl >= 379 ? 'red' : '' + player.ilvl >= 372 ? 'green' : ''}>{player.ilvl}</span>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}","import React from 'react'\nimport { useEffect } from 'react';\nimport GuildTable from './GuildTable';\nimport IconButton from '@mui/material/IconButton';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Stack from '@mui/material/Stack';\n\n\nexport const GuildRequest = () => {\n\n    const [token, setToken] = React.useState()\n    const [loadingState, setLoadingState] = React.useState();\n    const [guildCharacters, setGuildCharacters] = React.useState([])\n    const [guildInfo, setGuildInfo] = React.useState();\n    const [guildName, setGuildName] = React.useState('чёрный-лотос')\n    const [realmName, setRealmName] = React.useState('gordunni');\n    const [update, setUpdate] = React.useState(false);\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\n    const [countdown, setCountdown] = React.useState(0);\n\n    React.useEffect(() => {\n        countdown > 0 && setTimeout(() => setCountdown(countdown - 1), 1000);\n    }, [countdown]);\n\n    React.useEffect(() => {\n        setIsButtonDisabled(true);\n        setTimeout(() => {\n            setIsButtonDisabled(false);\n        }, 30000)\n        setCountdown(30)\n    }, [])\n\n    useEffect(() => {\n        if (!token) {\n            fetch(\"https://oauth.battle.net/token\", {\n                body: \"grant_type=client_credentials\",\n                headers: {\n                    Authorization:\n                        \"Basic Y2QwOTE0YzdjYjQ1NDNhNzhiYmVjOWY4OGY1OTU0N2M6bXpUamhHVkc4UnlnUlpsQzY0S3FRS1hhQjFPUWJGcjE=\",\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                method: \"POST\"\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    setToken(response.access_token)\n                })\n                .catch((err) => console.log(err))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token && guildName) {\n            fetch(`https://eu.api.blizzard.com/data/wow/guild/${realmName}/${guildName}/roster?namespace=profile-eu&locale=en_US&access_token=${token}`)\n                .then((res) => res.json())\n                .then((res) => {\n                    setGuildCharacters(res.members)\n                    setGuildInfo(res)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [guildName, realmName, token, update])\n\n    return (\n        <>\n            <Stack direction='row' justifyContent=\"space-between\" alignItems=\"center\">\n                {guildCharacters.length !== 0 && (\n                    <div className='app__header-title'>\n                        <h1>\n                            {guildInfo.guild.name} Parser\n                            <small>{guildInfo.guild.realm.name}</small>\n                        </h1>\n\n                    </div>\n                )}\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n                    {countdown !== 0 && (\n                        <span>{countdown}</span>\n                    )}\n                    <IconButton disabled={isButtonDisabled} onClick={() => {\n                        setUpdate(!update)\n                        setIsButtonDisabled(true)\n                        setTimeout(() => {\n                            setIsButtonDisabled(false);\n                        }, 60000)\n                        setCountdown(60)\n                    }} color=\"secondary\" aria-label=\"Update Data\">\n                        <RefreshIcon />\n                    </IconButton>\n                </Stack>\n            </Stack>\n            {guildCharacters.length !== 0 && (\n                <Stack spacing={2.5} direction={{ xs: 'column', sm: 'row' }}>\n                    <GuildTable guildCharacters={guildCharacters} loadingState={loadingState} setLoadingState={setLoadingState} token={token} update={update} rank={[5, 4, 3, 2, 1, 0]} title={'Main'} />\n                    <GuildTable guildCharacters={guildCharacters} loadingState={loadingState} setLoadingState={setLoadingState} token={token} update={update} rank={[6]} title={'Alt'} />\n                </Stack>\n            )}\n        </>\n\n    )\n}\n","import React from \"react\";\nimport { GuildRequest } from \"./components/GuildRequest\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <Container fixed maxWidth=\"xl\">\n          <GuildRequest/>\n        </Container>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '../src/pages/index.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}