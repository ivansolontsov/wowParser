{"version":3,"sources":["components/GuildTable.jsx","components/CharactersList.jsx","App.js","index.js"],"names":["GuildTable","_ref","title","players","token","update","rank","_React$useState","React","_React$useState2","Object","slicedToArray","characters","setCharacters","_React$useState3","_React$useState4","_React$useState5","_React$useState6","orderBy","setOrderBy","_React$useState7","_React$useState8","sortDirection","setSortDirection","stringCompare","string1","string2","useEffect","filter","element","includes","character","level","forEach","player","playerName","name","toLowerCase","fetch","concat","then","res","json","prev","toConsumableArray","catch","err","console","log","react","className","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","onClick","align","TableBody","sort","a","b","number1","number2","numberCompare","equipped_item_level","character_class","active_spec","letsCompare","map","index","key","sx","&:last-child td, &:last-child th","border","scope","player-class","CharactersList","useState","setToken","guildCharacters","setGuildCharacters","body","headers","Authorization","Content-Type","method","response","access_token","members","react_default","createElement","Fragment","length","darkTheme","createTheme","palette","mode","App","setUpdate","isButtonDisabled","setIsButtonDisabled","countdown","setCountdown","setTimeout","ThemeProvider","theme","CssBaseline","Container","fixed","maxWidth","IconButton","disabled","color","Refresh_default","CharactersList_CharactersList","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.43d4cdb4.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport default function GuildTable({ title, players, token, update, rank }) {\n\n  const [characters, setCharacters] = React.useState([]);\n  const [altCharacters, setAltCharacters] = React.useState([])\n  const [orderBy, setOrderBy] = React.useState('ilvl');\n  const [sortDirection, setSortDirection] = React.useState(false);\n\n\n  useEffect(() => {\n    if (token) {\n      setCharacters([]);\n      players\n        .filter(element => rank.includes(element.rank) && element.character.level === 70)\n        .forEach((player) => {\n          let playerName = player.character.name.toLowerCase();\n          fetch(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}?namespace=profile-eu&locale=en_US&access_token=${token}`)\n            .then(res => res.json())\n            .then((json) => {\n              setCharacters(prev => [...prev, json]);\n            })\n            .catch(err => console.log(err));\n        })\n    }\n  }, [update])\n\n\n  function stringCompare(string1, string2, sortDirection) {\n    if (sortDirection) {\n      if (string1 < string2) { return -1; }\n      if (string1 > string2) { return 1; }\n      return 0;\n    } else {\n      if (string1 > string2) { return -1; }\n      if (string1 < string2) { return 1; }\n      return 0;\n    }\n  }\n\n  function numberCompare(number1, number2, sortDirection) {\n    if (sortDirection) {\n      return number1 - number2\n    } else {\n      return number2 - number1\n    }\n  }\n\n\n  const letsCompare = (a, b, orderBy, sortDirection) => {\n    switch (orderBy) {\n      case 'ilvl': {\n        return numberCompare(a.equipped_item_level, b.equipped_item_level, sortDirection)\n      }\n      case 'name': {\n        return stringCompare(a.name, b.name, sortDirection)\n      }\n      case 'class': {\n        return stringCompare(a.character_class.name, b.character_class.name, sortDirection)\n      }\n      case 'spec': {\n        return stringCompare(a.active_spec.name, b.active_spec.name, sortDirection)\n      }\n      default:\n        break;\n    }\n  }\n\n  const compareFunction = (a, b) => {\n    return letsCompare(a, b, orderBy, sortDirection);\n  }\n\n  return (\n    <div className=\"app__table\">\n      <h2>{title}</h2>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('name')\n                  setSortDirection(!sortDirection)\n                }}>\n                Nickname\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('spec')\n                  setSortDirection(!sortDirection)\n                }}>\n                Spec\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('class')\n                  setSortDirection(!sortDirection)\n                }}>\n                Class\n              </TableCell>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('ilvl')\n                  setSortDirection(!sortDirection)\n                }} align=\"right\">\n                ilvl\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {characters\n              .sort(compareFunction)\n              .map((player, index) => (\n                <TableRow\n                  key={index}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    <strong>{player.name}</strong>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {player.active_spec.name}\n                  </TableCell>\n                  <TableCell align=\"right\" player-class={`${player.character_class.name}`}>\n                    <span>{player.character_class.name}</span>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span className={player.equipped_item_level >= 379 ? 'red' : '' + player.equipped_item_level >= 372 ? 'green' : ''}>{player.equipped_item_level}</span>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}","import React from 'react'\nimport { useEffect } from 'react';\nimport GuildTable from './GuildTable';\n\nexport const CharactersList = ({ update }) => {\n\n    const [token, setToken] = React.useState()\n    const [guildCharacters, setGuildCharacters] = React.useState([])\n\n    useEffect(() => {\n        if (!token) {\n            fetch(\"https://oauth.battle.net/token\", {\n                body: \"grant_type=client_credentials\",\n                headers: {\n                    Authorization:\n                        \"Basic Y2QwOTE0YzdjYjQ1NDNhNzhiYmVjOWY4OGY1OTU0N2M6bXpUamhHVkc4UnlnUlpsQzY0S3FRS1hhQjFPUWJGcjE=\",\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                method: \"POST\"\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    setToken(response.access_token)\n                })\n                .catch((err) => console.log(err))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            fetch(`https://eu.api.blizzard.com/data/wow/guild/gordunni/чёрный-лотос/roster?namespace=profile-eu&locale=en_US&access_token=${token}`)\n                .then((res) => res.json())\n                .then((res) => {\n                    setGuildCharacters(res.members)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [token, update])\n\n    return (\n        <>\n            {guildCharacters.length !== 0 && (\n                <div className='app__tables'>\n                    <GuildTable players={guildCharacters} token={token} update={update} rank={[5, 4, 3, 2, 1, 0]} title={'Main Characters'} />\n                    <GuildTable players={guildCharacters} token={token} update={update} rank={[6]} title={'Alt Characters'} />\n                </div>\n            )}\n        </>\n    )\n}\n","import React from \"react\";\nimport { CharactersList } from \"./components/CharactersList\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport IconButton from '@mui/material/IconButton';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\n\nfunction App() {\n\n  const [update, setUpdate] = React.useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\n  const [countdown, setCountdown] = React.useState(0);\n\n  React.useEffect(() => {\n    countdown > 0 && setTimeout(() => setCountdown(countdown - 1), 1000);\n  }, [countdown]);\n\n  React.useEffect(() => {\n    setIsButtonDisabled(true);\n    setTimeout(() => {\n      setIsButtonDisabled(false);\n    }, 60000)\n    setCountdown(60)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <Container fixed maxWidth=\"xl\">\n          <div className=\"app__header\">\n            <h1>Чёрный Лотос</h1>\n            {countdown !== 0 && (\n              <span>Update cooldown {countdown} sec</span>\n            )}\n            <div className=\"app__header-buttons\">\n              <IconButton disabled={isButtonDisabled} onClick={() => {\n                setUpdate(!update)\n                setIsButtonDisabled(true)\n                setTimeout(() => {\n                  setIsButtonDisabled(false);\n                }, 60000)\n                setCountdown(60)\n              }} color=\"secondary\" aria-label=\"Update Data\">\n                <RefreshIcon />\n              </IconButton>\n            </div>\n          </div>\n          <CharactersList update={update} />\n        </Container>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '../src/pages/index.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}