{"version":3,"sources":["components/GuildTable.jsx","components/CharactersList.jsx","App.js","index.js"],"names":["GuildTable","_ref","players","token","update","_React$useState","React","_React$useState2","Object","slicedToArray","characters","setCharacters","_React$useState3","_React$useState4","orderBy","setOrderBy","_React$useState5","_React$useState6","sortDirection","setSortDirection","stringCompare","string1","string2","useEffect","filter","element","rank","character","level","forEach","player","playerName","name","toLowerCase","fetch","concat","then","res","json","prev","toConsumableArray","catch","err","console","log","sort","a","b","number1","number2","numberCompare","equipped_item_level","character_class","active_spec","letsCompare","react","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","className","onClick","align","TableBody","map","index","key","sx","&:last-child td, &:last-child th","border","scope","player-class","CharactersList","useState","setToken","guildCharacters","setGuildCharacters","body","headers","Authorization","Content-Type","method","response","access_token","members","react_default","createElement","length","darkTheme","createTheme","palette","mode","App","setUpdate","isButtonDisabled","setIsButtonDisabled","countdown","setCountdown","setTimeout","Fragment","ThemeProvider","theme","CssBaseline","Container","fixed","maxWidth","IconButton","disabled","color","Refresh_default","CharactersList_CharactersList","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.43a5c2e4.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport default function GuildTable({ players, token, update }) {\n\n  const [characters, setCharacters] = React.useState([]);\n  const [orderBy, setOrderBy] = React.useState('ilvl');\n  const [sortDirection, setSortDirection] = React.useState(false);\n\n\n  useEffect(() => {\n    if (token) {\n      setCharacters([]);\n      players\n        .filter(element => element.rank <= 5 && element.character.level === 70)\n        .forEach((player) => {\n          let playerName = player.character.name.toLowerCase();\n          fetch(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}?namespace=profile-eu&locale=en_US&access_token=${token}`)\n            .then(res => res.json())\n            .then((json) => {\n              setCharacters(prev => [...prev, json]);\n            })\n            .catch(err => console.log(err));\n        })\n    }\n  }, [update])\n\n\n  function stringCompare(string1, string2, sortDirection) {\n    if (sortDirection) {\n      if (string1 < string2) { return -1; }\n      if (string1 > string2) { return 1; }\n      return 0;\n    } else {\n      if (string1 > string2) { return -1; }\n      if (string1 < string2) { return 1; }\n      return 0;\n    }\n  }\n\n  function numberCompare(number1, number2, sortDirection) {\n    if (sortDirection) {\n      return number1 - number2\n    } else {\n      return number2 - number1\n    }\n  }\n\n\n  const letsCompare = (a, b, orderBy, sortDirection) => {\n    switch (orderBy) {\n      case 'ilvl': {\n        return numberCompare(a.equipped_item_level, b.equipped_item_level, sortDirection)\n      }\n      case 'name': {\n        return stringCompare(a.name, b.name, sortDirection)\n      }\n      case 'class': {\n        return stringCompare(a.character_class.name, b.character_class.name, sortDirection)\n      }\n      case 'spec': {\n        return stringCompare(a.active_spec.name, b.active_spec.name, sortDirection)\n      }\n    }\n  }\n\n  const compareFunction = (a, b) => {\n    return letsCompare(a, b, orderBy, sortDirection);\n  }\n\n  characters.sort(compareFunction);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={'clickable'} onClick={() => {\n              setOrderBy('name')\n              setSortDirection(!sortDirection)\n            }}>\n              Nickname\n            </TableCell>\n            <TableCell className={'clickable'} align=\"right\" onClick={() => {\n              setOrderBy('spec')\n              setSortDirection(!sortDirection)\n            }}>\n              Spec\n            </TableCell>\n            <TableCell className={'clickable'} align=\"right\" onClick={() => {\n              setOrderBy('class')\n              setSortDirection(!sortDirection)\n            }}>\n              Class\n            </TableCell>\n            <TableCell className={'clickable'} onClick={() => {\n              setOrderBy('ilvl')\n              setSortDirection(!sortDirection)\n            }} align=\"right\">\n              ilvl\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {characters\n            .map((player, index) => (\n              <TableRow\n                key={index}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  <strong>{player.name}</strong>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {player.active_spec.name}\n                </TableCell>\n                <TableCell align=\"right\" player-class={`${player.character_class.name}`}> \n                  <span>{player.character_class.name}</span>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <span className={player.equipped_item_level >= 379 ? 'red' : '' + player.equipped_item_level >= 372 ? 'green' : ''}>{player.equipped_item_level}</span>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react'\nimport { useEffect } from 'react';\nimport GuildTable from './GuildTable';\n\nexport const CharactersList = ({ update }) => {\n\n    const [token, setToken] = React.useState()\n    const [guildCharacters, setGuildCharacters] = React.useState([])\n\n    useEffect(() => {\n        if (!token) {\n            fetch(\"https://oauth.battle.net/token\", {\n                body: \"grant_type=client_credentials\",\n                headers: {\n                    Authorization:\n                        \"Basic Y2QwOTE0YzdjYjQ1NDNhNzhiYmVjOWY4OGY1OTU0N2M6bXpUamhHVkc4UnlnUlpsQzY0S3FRS1hhQjFPUWJGcjE=\",\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                method: \"POST\"\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    setToken(response.access_token)\n                })\n                .catch((err) => console.log(err))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token) {\n            fetch(`https://eu.api.blizzard.com/data/wow/guild/gordunni/чёрный-лотос/roster?namespace=profile-eu&locale=en_US&access_token=${token}`)\n                .then((res) => res.json())\n                .then((res) => {\n                    setGuildCharacters(res.members)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [token, update])\n\n    return (\n        <div>\n            {guildCharacters.length !== 0 && (\n                <GuildTable players={guildCharacters} token={token} update={update} />\n            )}\n        </div>\n    )\n}\n","import React from \"react\";\nimport { CharactersList } from \"./components/CharactersList\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport IconButton from '@mui/material/IconButton';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\n\nfunction App() {\n\n  const [update, setUpdate] = React.useState(false);\n  const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\n  const [countdown, setCountdown] = React.useState(0);\n\n  React.useEffect(() => {\n    countdown > 0 && setTimeout(() => setCountdown(countdown - 1), 1000);\n  }, [countdown]);\n\n  React.useEffect(() => {\n    setIsButtonDisabled(true);\n    setTimeout(() => {\n      setIsButtonDisabled(false);\n    }, 60000)\n    setCountdown(60)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <Container fixed maxWidth=\"lg\">\n          <div className=\"app__header\">\n            <h1>Чёрный Лотос</h1>\n            {countdown !== 0 && (\n              <span>Cooldown {countdown} sec</span>\n            )}\n            <div className=\"app__header-buttons\">\n              <IconButton disabled={isButtonDisabled} onClick={() => {\n                setUpdate(!update)\n                setIsButtonDisabled(true)\n                setTimeout(() => {\n                  setIsButtonDisabled(false);\n                }, 60000)\n                setCountdown(60)\n              }} color=\"secondary\" aria-label=\"Update Data\">\n                <RefreshIcon />\n              </IconButton>\n            </div>\n          </div>\n          <CharactersList update={update} />\n        </Container>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '../src/pages/index.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <App />\n);\n"],"sourceRoot":""}