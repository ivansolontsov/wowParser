{"version":3,"sources":["components/GuildTable.jsx","components/GuildRequest.jsx","App.js","index.js"],"names":["GuildTable","_ref","title","players","token","update","rank","_React$useState","React","_React$useState2","Object","slicedToArray","characters","setCharacters","_React$useState3","_React$useState4","orderBy","setOrderBy","_React$useState5","_React$useState6","sortDirection","setSortDirection","stringCompare","string1","string2","useEffect","filter","element","includes","character","level","forEach","player","playerName","name","toLowerCase","fetch","concat","then","res","json","prev","toConsumableArray","catch","err","console","log","array","react","className","reduce","accumulator","currentValue","equipped_item_level","length","toFixed","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","onClick","align","TableBody","sort","a","b","number1","number2","numberCompare","character_class","active_spec","letsCompare","map","index","key","sx","&:last-child td, &:last-child th","border","scope","href","rel","target","player-class","GuildRequest","useState","setToken","guildCharacters","setGuildCharacters","guildInfo","setGuildInfo","_React$useState7","_React$useState8","guildName","_React$useState9","_React$useState10","realmName","_React$useState11","_React$useState12","setUpdate","_React$useState13","_React$useState14","isButtonDisabled","setIsButtonDisabled","_React$useState15","_React$useState16","countdown","setCountdown","setTimeout","body","headers","Authorization","Content-Type","method","response","access_token","members","react_default","createElement","Fragment","guild","realm","IconButton","disabled","color","Refresh_default","darkTheme","createTheme","palette","mode","App","ThemeProvider","theme","CssBaseline","Container","fixed","maxWidth","GuildRequest_GuildRequest","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.07303f7c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport default function GuildTable({ title, players, token, update, rank }) {\n\n  const [characters, setCharacters] = React.useState([]);\n  const [orderBy, setOrderBy] = React.useState('ilvl');\n  const [sortDirection, setSortDirection] = React.useState(false);\n\n\n  useEffect(() => {\n    if (token) {\n      setCharacters([]);\n      players\n        .filter(element => rank.includes(element.rank) && element.character.level === 70)\n        .forEach((player) => {\n          let playerName = player.character.name.toLowerCase();\n          fetch(`https://eu.api.blizzard.com/profile/wow/character/gordunni/${playerName}?namespace=profile-eu&locale=en_US&access_token=${token}`)\n            .then(res => res.json())\n            .then((json) => {\n              setCharacters(prev => [...prev, json]);\n            })\n            .catch(err => console.log(err));\n        })\n    }\n  }, [update])\n\n\n  function stringCompare(string1, string2, sortDirection) {\n    if (sortDirection) {\n      if (string1 < string2) { return -1; }\n      if (string1 > string2) { return 1; }\n      return 0;\n    } else {\n      if (string1 > string2) { return -1; }\n      if (string1 < string2) { return 1; }\n      return 0;\n    }\n  }\n\n  function numberCompare(number1, number2, sortDirection) {\n    if (sortDirection) {\n      return number1 - number2\n    } else {\n      return number2 - number1\n    }\n  }\n\n\n  const letsCompare = (a, b, orderBy, sortDirection) => {\n    switch (orderBy) {\n      case 'ilvl': {\n        return numberCompare(a.equipped_item_level, b.equipped_item_level, sortDirection)\n      }\n      case 'name': {\n        return stringCompare(a.name, b.name, sortDirection)\n      }\n      case 'class': {\n        return stringCompare(a.character_class.name, b.character_class.name, sortDirection)\n      }\n      case 'spec': {\n        return stringCompare(a.active_spec.name, b.active_spec.name, sortDirection)\n      }\n      default:\n        break;\n    }\n  }\n\n  const compareFunction = (a, b) => {\n    return letsCompare(a, b, orderBy, sortDirection);\n  }\n\n  const getAverageItemLevel = (array) => {\n    const initialValue = 0;\n    const sumWithInitial = array.reduce(\n      (accumulator, currentValue) => accumulator + currentValue.equipped_item_level,\n      initialValue\n    );\n    let avIlvl = sumWithInitial/array.length\n    return avIlvl.toFixed(2);\n  }\n\n  return (\n    <div className=\"app__table\">\n      <h2>{title}</h2>\n      <span>Average ilvl: {getAverageItemLevel(characters)}</span>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('name')\n                  setSortDirection(!sortDirection)\n                }}>\n                Nickname\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('spec')\n                  setSortDirection(!sortDirection)\n                }}>\n                Spec\n              </TableCell>\n              <TableCell className={'clickable'} align=\"right\"\n                onClick={() => {\n                  setOrderBy('class')\n                  setSortDirection(!sortDirection)\n                }}>\n                Class\n              </TableCell>\n              <TableCell className={'clickable'}\n                onClick={() => {\n                  setOrderBy('ilvl')\n                  setSortDirection(!sortDirection)\n                }} align=\"right\">\n                ilvl\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {characters\n              .sort(compareFunction)\n              .map((player, index) => (\n                <TableRow\n                  key={index}\n                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\">\n                    <a href={`https://worldofwarcraft.com/ru-ru/character/eu/gordunni/${player.name}`} rel=\"noopener noreferrer\" target=\"_blank\"><strong>{player.name}</strong></a>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {player.active_spec.name}\n                  </TableCell>\n                  <TableCell align=\"right\" player-class={`${player.character_class.name}`}>\n                    <span>{player.character_class.name}</span>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <span className={player.equipped_item_level >= 379 ? 'red' : '' + player.equipped_item_level >= 372 ? 'green' : ''}>{player.equipped_item_level}</span>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}","import React from 'react'\nimport { useEffect } from 'react';\nimport GuildTable from './GuildTable';\nimport IconButton from '@mui/material/IconButton';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nexport const GuildRequest = () => {\n\n    const [token, setToken] = React.useState()\n    const [guildCharacters, setGuildCharacters] = React.useState([])\n    const [guildInfo, setGuildInfo] = React.useState();\n    const [guildName, setGuildName] = React.useState('чёрный-лотос')\n    const [realmName, setRealmName] = React.useState('gordunni');\n    const [update, setUpdate] = React.useState(false);\n    const [isButtonDisabled, setIsButtonDisabled] = React.useState(false);\n    const [countdown, setCountdown] = React.useState(0);\n\n    React.useEffect(() => {\n        countdown > 0 && setTimeout(() => setCountdown(countdown - 1), 1000);\n    }, [countdown]);\n\n    React.useEffect(() => {\n        setIsButtonDisabled(true);\n        setTimeout(() => {\n            setIsButtonDisabled(false);\n        }, 60000)\n        setCountdown(60)\n    }, [])\n\n    useEffect(() => {\n        if (!token) {\n            fetch(\"https://oauth.battle.net/token\", {\n                body: \"grant_type=client_credentials\",\n                headers: {\n                    Authorization:\n                        \"Basic Y2QwOTE0YzdjYjQ1NDNhNzhiYmVjOWY4OGY1OTU0N2M6bXpUamhHVkc4UnlnUlpsQzY0S3FRS1hhQjFPUWJGcjE=\",\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                method: \"POST\"\n            })\n                .then((response) => response.json())\n                .then((response) => {\n                    setToken(response.access_token)\n                })\n                .catch((err) => console.log(err))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (token && guildName) {\n            fetch(`https://eu.api.blizzard.com/data/wow/guild/${realmName}/${guildName}/roster?namespace=profile-eu&locale=en_US&access_token=${token}`)\n                .then((res) => res.json())\n                .then((res) => {\n                    setGuildCharacters(res.members)\n                    setGuildInfo(res)\n                })\n                .catch(err => console.log(err))\n        }\n    }, [guildName, realmName, token, update])\n\n    return (\n        <>\n            <div className=\"app__header\">\n                {guildCharacters.length !== 0 && (\n                    <div className='app__header-title'>\n                        <h1>{guildInfo.guild.name}</h1>\n                        <small>{guildInfo.guild.realm.name}</small>\n                    </div>\n                )}\n                <div className=\"app__header-buttons\">\n                    {countdown !== 0 && (\n                        <span>{countdown}</span>\n                    )}\n                    <IconButton disabled={isButtonDisabled} onClick={() => {\n                        setUpdate(!update)\n                        setIsButtonDisabled(true)\n                        setTimeout(() => {\n                            setIsButtonDisabled(false);\n                        }, 60000)\n                        setCountdown(60)\n                    }} color=\"secondary\" aria-label=\"Update Data\">\n                        <RefreshIcon />\n                    </IconButton>\n                </div>\n            </div>\n            {guildCharacters.length !== 0 && (\n                <div className='app__tables'>\n                    <GuildTable players={guildCharacters} token={token} update={update} rank={[5, 4, 3, 2, 1, 0]} title={'Main Characters'} />\n                    <GuildTable players={guildCharacters} token={token} update={update} rank={[6]} title={'Alt Characters'} />\n                </div>\n            )}\n        </>\n\n    )\n}\n","import React from \"react\";\nimport { GuildRequest } from \"./components/GuildRequest\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Container from '@mui/material/Container';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <Container fixed maxWidth=\"xl\">\n          <GuildRequest/>\n        </Container>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport '../src/pages/index.css';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}